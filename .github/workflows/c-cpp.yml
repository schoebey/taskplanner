name: compile and release

on: push

env:
  QT_VERSION:     "5.15.2"
  MINGW_VERSION:  "win64_mingw81"
  MINGW_PATH:     "mingw81_64"
  BUILD_TYPE:      Release

jobs:
  build:
    runs-on: windows-2019
    steps:
    -
      uses: actions/checkout@v2
    -
      name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: ${{ env.QT_VERSION }}
        host: 'windows'
        target: 'desktop'
        arch:    ${{ env.MINGW_VERSION }}
        dir: "${{github.workspace}}/qt"
        install-deps: "true"
        cache: "true"
    - name: "Create build directory and run CMake"
      run: cmake -S . -B build -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release
    - name: "Build Project" 
      run: cmake --build build --target all --config Release -- -j4 
    #- 
    #  name: Setup tmate session
    #  uses: mxschmitt/action-tmate@v3
    -
      name: Compress portable program
      run: |
        mkdir ${{github.workspace}}\build\all\plugins
        cd ${{github.workspace}}\build\
        cp ${{github.workspace}}/build/bin/taskplanner.exe ${{github.workspace}}\build\all\
        cp ${{github.workspace}}/build/libtaskmanager/libtaskmanager.* ${{github.workspace}}\build\all\
        xcopy ${{github.workspace}}\build\plugins\*.dll ${{github.workspace}}\build\all\plugins /sy
        ${{ env.Qt5_Dir }}/bin/qtenv2.bat
        echo "C:/ghcup/ghc/9.2.8/mingw/bin/" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        #echo "C:/msys64/mingw64/bin" >> $GITHUB_PATH
        echo $GITHUB_PATH
        windeployqt.exe --compiler-runtime all\taskplanner.exe
        cd ${{github.workspace}}\build\all
        mkdir ${{github.workspace}}\build\release
        Compress-Archive -Path ${{github.workspace}}\build\all\* -DestinationPath ${{github.workspace}}\build\release\final.zip
    -
      name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: ./build/release/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
